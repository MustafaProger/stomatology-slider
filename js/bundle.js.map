{"version":3,"file":"bundle.js","mappings":"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","sources":["webpack://food_dist/./js/modules/slider.js","webpack://food_dist/webpack/bootstrap","webpack://food_dist/webpack/runtime/define property getters","webpack://food_dist/webpack/runtime/hasOwnProperty shorthand","webpack://food_dist/webpack/runtime/make namespace object","webpack://food_dist/./js/script.js"],"sourcesContent":["export default function slider() {\n    const dotsContainer = document.querySelector('.dots-container');\n    const movingDot = document.createElement('div'); // создаем элемент для перемещения активной точки\n    movingDot.id = 'active-dot';\n    dotsContainer.appendChild(movingDot); // добавляем активную точку в контейнер с точками\n\n    const dots = document.querySelectorAll('.dot');\n    const slides = document.querySelectorAll('.about__block');\n    let currentIndex = 0; // текущий индекс слайда\n    const totalSlides = slides.length; // общее количество слайдов\n    const totalDots = dots.length; // количество индикаторов\n\n    // Обрабатываем клик по индикаторам\n    dots.forEach((dot, index) => {\n        dot.addEventListener('click', () => {\n            // Перемещаем слайдер на нужную позицию\n            currentIndex = index; // устанавливаем текущий индекс на основе индикатора\n            updateSliderPosition(); // обновляем позицию слайдера\n\n            // Перемещаем активную точку\n            moveActiveDot(currentIndex);\n        });\n    });\n\n    // Функция для обновления позиции слайдера\n    function updateSliderPosition() {\n        // Сбрасываем все классы с слайдов\n        slides.forEach(slide => slide.classList.remove('active', 'prev', 'next'));\n\n        // Определяем индексы предыдущего и следующего слайда\n        const prevIndex = currentIndex === 0 ? totalSlides - 1 : currentIndex - 1; // если текущий слайд первый, предыдущий - последний\n        const nextIndex = currentIndex === totalSlides - 1 ? 0 : currentIndex + 1; // если текущий слайд последний, следующий - первый\n\n        // Устанавливаем классы активного, предыдущего и следующего слайдов\n        slides[currentIndex].classList.add('active');\n        slides[prevIndex].classList.add('prev');\n        slides[nextIndex].classList.add('next');\n    }\n\n    // Функция для перемещения активной точки индикатора\n    function moveActiveDot(currentSlideIndex) {\n        // Рассчитываем индекс активной точки на основе текущего индекса слайда\n        const activeDotIndex = currentSlideIndex % totalDots;\n\n        // Перемещаем активную точку к соответствующему индикатору\n        const activeDotPosition = dots[activeDotIndex].offsetLeft; // позиция нужного индикатора\n        movingDot.style.transform = `translateX(${activeDotPosition}px)`; // перемещаем активную точку\n\n        // Обновляем стили индикаторов\n        dots.forEach(dot => dot.classList.remove('active')); // сбрасываем активный класс у всех индикаторов\n        dots[activeDotIndex].classList.add('active'); // добавляем активный класс текущему индикатору\n    }\n\n    // Функция для перехода к предыдущему слайду\n    function gotoPrev() {\n        currentIndex = currentIndex > 0 ? currentIndex - 1 : totalSlides - 1; // уменьшаем индекс, если возможно, иначе переходим к последнему слайду\n        updateSliderPosition();\n        moveActiveDot(currentIndex);\n    }\n\n    // Функция для перехода к следующему слайду\n    function gotoNext() {\n        currentIndex = currentIndex < totalSlides - 1 ? currentIndex + 1 : 0; // увеличиваем индекс, если возможно, иначе переходим к первому слайду\n        updateSliderPosition();\n        moveActiveDot(currentIndex);\n    }\n\n    // Добавляем обработчики для кнопок \"Назад\" и \"Вперед\"\n    const buttons = document.querySelectorAll('.button');\n    buttons.forEach((btn, index) => {\n        btn.addEventListener('click', () => index == 0 ? gotoPrev() : gotoNext()); // если индекс кнопки 0, переходим назад, иначе вперед\n    });\n\n    // Обработчик нажатия клавиш\n    document.addEventListener('keydown', (event) => {\n        if (event.key === 'ArrowLeft') {\n            gotoPrev(); // Переход к предыдущему слайду\n        } else if (event.key === 'ArrowRight') {\n            gotoNext(); // Переход к следующему слайду\n        }\n    });\n\n    // track.addEventListener('touchstart', touchStart);\n    // track.addEventListener('touchmove', touchMove);\n    // track.addEventListener('touchend', touchEnd);\n\n    // function touchStart(event) {\n    //     startX = event.touches[0].clientX;\n    //     isDragging = true;\n    //     prevTranslate = currentTranslate;\n    // }\n\n    // function touchMove(event) {\n    //     if (!isDragging) return;\n    //     const currentX = event.touches[0].clientX;\n    //     const diff = currentX - startX;\n    //     currentTranslate = prevTranslate + diff;\n    //     track.style.transform = `translateX(${currentTranslate}px)`;\n    // }\n\n    // function touchEnd() {\n    //     isDragging = false;\n    //     const moveThreshold = 50;\n    //     const movedBy = currentTranslate - prevTranslate;\n\n    //     if (movedBy < -moveThreshold) {\n    //         nextArrow();\n    //     } else if (movedBy > moveThreshold) {\n    //         prevArrow();\n    //     } else {\n    //         track.style.transform = `translateX(${prevTranslate}px)`;\n    //     }\n    // }\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import slider from \"./modules/slider\";\n\nwindow.addEventListener('DOMContentLoaded', () => {\n    slider();\n})"],"names":["slider","dotsContainer","document","querySelector","movingDot","createElement","id","appendChild","dots","querySelectorAll","slides","currentIndex","totalSlides","length","totalDots","forEach","dot","index","addEventListener","updateSliderPosition","moveActiveDot","slide","classList","remove","prevIndex","nextIndex","add","currentSlideIndex","activeDotIndex","activeDotPosition","offsetLeft","style","transform","gotoPrev","gotoNext","buttons","btn","event","key","window"],"sourceRoot":""}